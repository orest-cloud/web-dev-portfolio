[
  {
    "type": "text-with-link",
    "id": 100,
    "margin_bottom": "standard",
    "media": "",
    "url": "https://stompingground.herokuapp.com/",
    "content": "See the website in action at",
    "caption": ""
  },
  {
    "type": "image",
    "id": 200,
    "margin_bottom": "standard",
    "media": "StompingGround_Home_1.jpg",
    "url": "",
    "content": "Stomping Ground home page",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 300,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Stomping Ground is a React app I created to demonstrate my competency in building a Model-view-controller* patterned fully responsive web application. The React side fetches real estate data through http GET requests to a REST API server I wrote in Express.js.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 400,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Users select a Toronto neighborhood and are able to view property listings in that neighborhood, walkability scores, and Google Maps user photos of the area.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 500,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Note: Due to the prohibitive costs of subscribing to a live real estate listing API, the property data displayed in Stomping Ground is static rather than live, and served from my own REST API. It is meant as a concept demonstration rather than an actual resource.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 600,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "*Model-view-controller refers to a software design pattern for developing user interfaces which guides the programming logic to be segmented into three parts: the model (the backend data), the view (pertinent data rendered for the user to see), and the controller (code that receives input, validates, and manipulates and retrieves data from the model).",
    "caption": ""
  },
  {
    "type": "image",
    "id": 700,
    "margin_bottom": "standard",
    "media": "StompinGround_Results.jpg",
    "url": "",
    "content": "Property listings",
    "caption": ""
  },
  {
    "type": "h3",
    "id": 800,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Concept Summary",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 900,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Stomping Ground allows users to browse residential properties in Toronto, while assessing the WalkScore of the neighborhood. WalkScore is an algorithmic group of metrics representing ease of access to amenities, public transit, friendliness to bikes, as well as other metrics.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1000,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I built my app to be faster and more user-friendly than other websites that serve similar data. In a time when global and even local travel has been restricted, people still want to get a sense of the neighbourhood they're considering moving to. Walkability and access to transit is an important factor in choosing a home.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1100,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Standard property info is also provided: Price estimate, agent contact info, available parking and other details.",
    "caption": ""
  },
  {
    "type": "image",
    "id": 1200,
    "margin_bottom": "standard",
    "media": "StompingGround_Details_2.jpg",
    "url": "",
    "content": "Property details",
    "caption": ""
  },
  {
    "type": "h3",
    "id": 1300,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Code Samples",
    "caption": ""
  },
  {
    "type": "custom",
    "id": 1400,
    "margin_bottom": "standard",
    "media": "",
    "url": "https://github.com/orest-cloud/stomping_ground/",
    "content": "To see the full source code, please visit",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1500,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Below is a sample of my server side JavaScript programming, written in popular back end framework Express.js. These functions fetch live photo data from Google Maps Places, and passes that data to the React client side, in response to an Axios GET request.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1600,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "There are two main benefits to the server doing this rather than the client: 1. It avoids CORS errors that would be caused by the client making requests from numerous servers. 2. It allows my Google API key, used to access the Google Maps data from Google, stored and used on the server side and therefore more secure.",
    "caption": ""
  },
  {
    "type": "code",
    "id": 1700,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Server code",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1800,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Below is a sample of one of the GET requests made from the client side. I wrote this using the JS library Axios.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 1900,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "It passes a street address and neighborhood ID in the request, and will receive back from the server property listings and Google Maps photo data in base64 format.",
    "caption": ""
  },
  {
    "type": "code",
    "id": 2000,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Client ï¿½ Axios request",
    "caption": ""
  },
  {
    "type": "h3",
    "id": 2100,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "Process",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 2200,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I wrote a proposal outling the concept and architecture of the app. I received approval from BrainStation web development educators and constructive feedback, which I incorporated into my specs.",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 2300,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I created wireframes showing the basic layout and flow.",
    "caption": ""
  },
  {
    "type": "image",
    "id": 2400,
    "margin_bottom": "standard",
    "media": "StompingGround_Wireframes_1.jpg",
    "url": "",
    "content": "Stomping Ground wireframe",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 2500,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I then created high fidelity mockups in Adobe Illustrator. These served as a reference guide when I began building the client side in React.",
    "caption": ""
  },
  {
    "type": "image",
    "id": 2600,
    "margin_bottom": "standard",
    "media": "StompingGround_Prototype_1.jpg",
    "url": "",
    "content": "The design prototype for Stomping Ground",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 2700,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I used Adobe Animate CC to create my animated logo. I was able to embed and manipulate the frames of this animation in React using a library called animate-react.",
    "caption": ""
  },
  {
    "type": "image",
    "id": 2800,
    "margin_bottom": "standard",
    "media": "StompingGround_logo_animated.gif",
    "url": "",
    "content": "An animated logo",
    "caption": ""
  },
  {
    "type": "paragraph",
    "id": 2900,
    "margin_bottom": "standard",
    "media": "",
    "url": "",
    "content": "I'm proud of this project because I know that some of the techniques I learned in order to extract data from external sources like Google Maps Places could be transferrable to other informational sites, and for sites that use geolocation.",
    "caption": ""
  }
 ]